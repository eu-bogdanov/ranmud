# RanvierMUD
NodeJS based MUD engine with full localization support

## Contributing to this fork
This fork aims to eventually turn the lightweight MUD engine Ranvier, developed by shawncplus, into a full-fledged game. The setting is, currently, a post-apocalyptic steampunk port town. That is probably a cliche, but I don't care. Right now, the master branch is working and has a fair amount of new content and features. However, I have a better understanding of the codebase now so it is in flux.

There is also a development branch where I am working on rewriting some of the features to submit to the upstream project. At some point, the dev branch will be updated to include a lot more content. For the time being, it's bare since I am rewriting some features I'd already added.

Please submit any PRs that are related to making this into a game to this project, preferably the master branch. Please submit any features based on enhancing the MUD engine itself to the shawncplus project.

## Features
* Full localization for any strings displayed to the player after they log in. This isn't a common feature in MUDs so I'll explain it. Player A and Player B log in, play the same game and see a different language. Same items, npcs, rooms, etc, different language.
* Scripting support: It's in Javascript! No need for a shitty DSL. The codebase is javascript, the scripting is javascript.
* Scripting is event-based. Put a listener in the script attached to your mob and it'll automagically happen when the event is emitted. Adding new events is easy as npc.emit('eventName');
* Pfile saving in JSON, easy to parse for external usage
* Rooms, items, and npcs are easily described in yaml. No wierd bullshit ~~~~ and byte-specific parsing that requires a GUI editor to build.
* Arbitrary room exits custom to each room not locked into n/s/e/w and it's not a pain in the ass to add them
* Did I mention it's in blasting Javascript? No compiling, no C, no cygwin, no 15 year old spaghetti code.
* Basic leveling system
* Basic combat sytem. Due to the way the repl works it could be used to do turn-based or real-time combat without changing the base functionality.
* Basic, easily customizable/overhauled skill system
* Basic channel system

## Requirements

* NodeJS >= 0.6.2

## Up and running

    git clone git://github.com/shawncplus/ranviermud
    cd ranviermud
    npm install
    sudo ./ranvier -v --save=10 --respawn=10

Connect to the server using `telnet 23`
    

## Documentation
Holy crap there is actually documentation and guides for this thing!
[See the wiki right here.](https://github.com/shawncplus/ranviermud/wiki/Home)
